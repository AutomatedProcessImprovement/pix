version: '3.8'
services:

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  pix_client:
    build:
      context: ./combined_client
      dockerfile: Dockerfile
    volumes:
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    ports:
      - '5173:80'
    depends_on:
      - pix_api
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  pix_api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    depends_on:
      - db

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pix
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data

  nginx:
    image: nginx
    restart: always
    ports:
      - '80:80'
    volumes:
      - ./local.conf:/etc/nginx/nginx.conf
    depends_on:
      - pix_client
      - pix_api

  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    container_name: prosimos-rabbitmq
    # environment:
    #     - RABBITMQ_DEFAULT_USER=myuser
    #     - RABBITMQ_DEFAULT_PASS=mypassword
    ports:
      - 5672:5672 # port for the worker for tasks management
      - 15672:15672 # GUI port

  # worker deployment
  worker:
    build:
      context: ./prosimos-microservice
      dockerfile: Dockerfile.worker
    container_name: prosimos-celery-worker
    environment:
      - CELERY_BROKER_URL=amqp://rabbit:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/
      - FLASK_DEBUG=1
    volumes:
      - ./src/celery/data:/app/src/celery/data
    depends_on:
      - rabbit
      - redis

  # flask app deployment
  prosimos_api:
    build:
      context: ./prosimos-microservice
      dockerfile: Dockerfile.api
    container_name: prosimos-api
    ports:
      - 5000:5000
    volumes:
      - ./src/celery/data:/app/src/celery/data
    environment:
      - CELERY_BROKER_URL=amqp://rabbit:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/
      - FLASK_DEBUG=1

  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379


volumes:
  db:
    driver: local